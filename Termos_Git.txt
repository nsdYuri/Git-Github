O que é o Git?
É um sisetma de controle de versão. Permitindo com que os programadores controlem a versão
de seus códigos através do próprio computador e sincronizar as mudanças e alterações para
um servidor remotamente. Isso possibilita o desenvolvimento coletivo entre programadores em
um repositório único sem que um atrapalhe o outro.

git config --global user.name "nome":
Comando que armazena nas configurações do git o nome do usuário que está operando naquele repositório
'--global' serve para a maquina salvar que toda vez que o git for aberto, sera o mesmo usuario.

git config --global.user.emal "email":
Comando que armazena nas configurações do git o email do usuário que está operando naquele repositório
'--global' serve para a maquina salvar que toda vez que o git for aberto, sera o mesmo usuario.

git init:
Comando que serve para inicializr o controle de versão git no repositório.
Normalmente é o primeiro comando que utilizamos ao criar um repositório. Ele basicamente
transforma um diretório comum em um repositório Git, que apartir desse momento irá aceitar
e executar seus comandos.
OBS: Os comandos Git devem ser executados dentro do diretório do projeto. Caso for executados
mais deuma vez em um repositório ja inicializado, nenhum progresso ou histórico sera perdido, 
será apenas exibido uma mensagem dizendo que o repositório foi reinicializado.

git branch -M main:
Esse comando irá criar uma branch (ramificação) chamada main, que normalmente é a branch principal
utilzada em projetos, é nela onde se tem o costume de guardar o código do projeto final.
É necessário executarmos esse comando porque por padrão o git inicializa criando uma branch chamada (master)
ela não é utitlizada, por isso fazemos essa troca para a branch main 

    git config --global init.defaultBranch main:
    Comando que ao executado, define a branch padrão para futuras inicializações de repositório como "main".

git remote add origin "url do repositório remoto":
É a partir desse comando que começamos a linkar o repositório local com o remoto. Após criar um repositório no
Github, basta copiar a url disponibilizada e colar entre as aspas desse comando, isso irá indicar para o git qual 
é a referencia remota daquele repositório local. O remoto é oque permite a acessibilidade do código salvo em qualquer
outra máquina.

git remote -v:
Exibe a url do repositório remoto na qual o git esta sincronizado, caso execute esse comando sem adicionar nenhum repositório
remoto, nada sera exibido.

git status:
Comando que informa na tela qual o status atual do repositório, no caso em qual estágio se encontra os arquivos nele presentes.
Para se entender os estágios é necessário ter noção do fluxo de versionamento do git.
    1° Work Directory - É quando os arquivos são modificados, excluidos ou adicionados
    2° Staging Area - Etapa onde são adicionados os arquivos preparados para o versionamento
    3° Repository - Arquivos salvos
    4° Remote Repository - Após os arquivos subirem para o repositório remoto
Os estágios são:
Nothing to commit - É o quando não há nennhuma alteração identificada 
Untracked files - Um estágio antes de serem adicionados, é quando algum arquivo é modificado, excluido ou adicionado.
Changes to be committed - Quando o arquivo é adicionado e está pronto pra ser commitado.
Commit - É a mensagem incluida para registrar oque foi modificado naquela versão do arquivo.

git add "nome do arquivo.seu formato":
É o comando que adiciona os arquivos para a Stanging Area, nesse momento o sistema informa que existem mudanças para
serem commitadas (Changes to be committed). Caso for preciso adiconar mais de um arquivo, basta incluir um ponto após 
o add (git add .) 

git commit -m "mensagem do commit":
É utilizado para reazliar o famoso commit, salvando as alterações e indo para a parte Repository do fluxo. Fazendo com que o sistema volte 
para o estágio de Nothing to commit depois dessa ação, basicamente salva as alterações realizadas com uma mensagem que normalmente indica aquilo 
que foi aleterado. 

git push origin main:
Por fim, este comando sobe os commits realizados para repositórios remoto entrando no fluxo de Remote Repository.

